language: python
rvm: 2.0
sudo: required

env:
  global:
    - OMP_NUM_THREADS=4
    - CMAKE_BUILD_TYPE=Debug
    - VERBOSE_MAKEFILE=yes
    - PARALLEL_TEST_JOBS=2
    - DEVEL_PACKAGES="cmake cmake-data libblas-dev liblapack-dev"
    # COVERITY_SCAN_TOKEN
    - secure: "fwGBveBukwWDaaGIqGV3CkOVk1ZdIEaHuVp+B1WvzpyZ2/4zYxyOe0bSgCOA8usWYeuYSsvhNU7IjTiiEyU/tpRYreHjO70dnfPyNW9SREx791RLaMolZz4QrXZINsbDx/A0mMOXQGttOEtlfZauJ+1l4WvntlYumC/TbMWiwWQ6Rzm7lfVjWODclG3K9yiV4EvhCGOo+TPA0qCBonOP6DiP5OLtCLANcXP7gV1PPHk2fYKbBS/jD9i0o2vX8rSt8bZI1cMf/x9bgz11h2s0TnIG2RHHScKaRl7c57cLj9eX9DfcMYrBLjuqzdApdZ8n2sfRGMwl+I5+aNQAXkgphquewdHctMgh6J19hYHouGntxgOki5qVzJQ32RvtHGGLX1+0cSCDQfsxLNYsUuC+3Z5wWoppy+wHYgwCQAtxazFtYguj0F0lDsViSp4DR9NCykvt2pDzhL9ZVJ6M8L9Q3JGoG/QQ3c3CefODKaFXqkFZ97pfMvvs/dHkxeSrW7Znqb9MkBU6h0Q86s8pUzoJGHsJ/LidCFneAJbvRR1SpHBxZ3BHOe15oJtcQsA/czRd4kic6UajlYGbV9/7FjM9KOVTduxuwG6RdVxOd2M6dnV10SZVtVR7b7b9TfXntiUWNkpRvFTGiHBQuywI42Ix+bMbDr3VJxcg7VPXJ9sO5uQ="

addons:
  apt:
    update: true
    sources:
      - ubuntu-toolchain-r-test
    coverity_scan:
        project:
            name: "lanl/bml"
            description: "Build submitted via Travis CI"
        notification_email: nicolasbock@gmail.com
        build_command_prepend: "cmake -DCMAKE_BUILD_TYPE=Debug -DBML_OPENMP=no -DBML_TESTING=yes -DBML_INTERNAL_BLAS=yes -DBML_INTERNAL_GEMM=yes ."
        build_command: "make"
        branch_pattern: coverity_scan

stages:
  - name: linter
    if: branch != coverity_scan
  - name: test-simple
    if: branch != coverity_scan
  - name: test-full
    if: branch != coverity_scan
  - name: coverage
    if: branch != coverity_scan
  - name: docs
    if: branch = master
  - name: coverity
    if: branch = coverity_scan

jobs:
  include:
    - stage: linter
      script:
        - bundle install
        - pip install proselint
        - bundle exec danger
        - env packages="indent" ./install_packages.sh
        - env BML_OPENMP=no VERBOSE_MAKEFILE=yes ./build.sh check_indent
    - stage: docs
      script:
        - env packages="${DEVEL_PACKAGES} gcc-8 g++-8 gfortran-8 doxygen texlive" ./install_packages.sh
        - env CC=gcc-8 CXX=g++-8 FC=gfortran-8 GCOV=gcov-8 BML_OPENMP=no VERBOSE_MAKEFILE=yes ./build.sh docs
    - stage: test-simple
      script:
        - env packages="${DEVEL_PACKAGES} gcc-4.7 g++-4.7 gfortran-4.7" ./install_packages.sh
        - env CC=gcc-4.7 CXX=g++-4.7 FC=gfortran-4.7 GCOV=gcov-4.7 BUILD_SHARED_LIBS=yes BML_OPENMP=no BML_INTERNAL_BLAS=no ./build.sh testing
    - script:
        - env packages="${DEVEL_PACKAGES} gcc-4.7 g++-4.7 gfortran-4.7" ./install_packages.sh
        - env CC=gcc-4.7 CXX=g++-4.7 FC=gfortran-4.7 GCOV=gcov-4.7 BUILD_SHARED_LIBS=yes BML_OPENMP=no BML_INTERNAL_BLAS=yes ./build.sh testing
    - script:
        - env packages="${DEVEL_PACKAGES} gcc-4.7 g++-4.7 gfortran-4.7" ./install_packages.sh
        - env CC=gcc-4.7 CXX=g++-4.7 FC=gfortran-4.7 GCOV=gcov-4.7 BUILD_SHARED_LIBS=yes BML_OPENMP=yes BML_INTERNAL_BLAS=no ./build.sh testing
    - script:
        - env packages="${DEVEL_PACKAGES} gcc-4.7 g++-4.7 gfortran-4.7" ./install_packages.sh
        - env CC=gcc-4.7 CXX=g++-4.7 FC=gfortran-4.7 GCOV=gcov-4.7 BUILD_SHARED_LIBS=yes BML_OPENMP=yes BML_INTERNAL_BLAS=yes ./build.sh testing
    - stage: test-full
      script:
        - env packages="${DEVEL_PACKAGES} valgrind gcc-6 g++-6 gfortran-6" ./install_packages.sh
        - env CC=gcc-6 CXX=g++-6 FC=gfortran-6 GCOV=gcov-6 BUILD_SHARED_LIBS=no BML_OPENMP=no BML_INTERNAL_BLAS=no ./build.sh testing
    - script:
        - env packages="${DEVEL_PACKAGES} gcc-6 g++-6 gfortran-6" ./install_packages.sh
        - env CC=gcc-6 CXX=g++-6 FC=gfortran-6 GCOV=gcov-6 BUILD_SHARED_LIBS=no BML_OPENMP=no BML_INTERNAL_BLAS=yes ./build.sh testing
    - script:
        - env packages="${DEVEL_PACKAGES} gcc-6 g++-6 gfortran-6" ./install_packages.sh
        - env CC=gcc-6 CXX=g++-6 FC=gfortran-6 GCOV=gcov-6 BUILD_SHARED_LIBS=no BML_OPENMP=yes BML_INTERNAL_BLAS=no ./build.sh testing
    - script:
        - env packages="${DEVEL_PACKAGES} gcc-6 g++-6 gfortran-6" ./install_packages.sh
        - env CC=gcc-6 CXX=g++-6 FC=gfortran-6 GCOV=gcov-6 BUILD_SHARED_LIBS=no BML_OPENMP=yes BML_INTERNAL_BLAS=yes ./build.sh testing
    - script:
        - env packages="${DEVEL_PACKAGES} gcc-6 g++-6 gfortran-6" ./install_packages.sh
        - env CC=gcc-6 CXX=g++-6 FC=gfortran-6 GCOV=gcov-6 BUILD_SHARED_LIBS=yes BML_OPENMP=no BML_INTERNAL_BLAS=no ./build.sh testing
    - script:
        - env packages="${DEVEL_PACKAGES} gcc-6 g++-6 gfortran-6" ./install_packages.sh
        - env CC=gcc-6 CXX=g++-6 FC=gfortran-6 GCOV=gcov-6 BUILD_SHARED_LIBS=yes BML_OPENMP=no BML_INTERNAL_BLAS=yes ./build.sh testing
    - script:
        - env packages="${DEVEL_PACKAGES} gcc-6 g++-6 gfortran-6" ./install_packages.sh
        - env CC=gcc-6 CXX=g++-6 FC=gfortran-6 GCOV=gcov-6 BUILD_SHARED_LIBS=yes BML_OPENMP=yes BML_INTERNAL_BLAS=no ./build.sh testing
    - script:
        - env packages="${DEVEL_PACKAGES} gcc-6 g++-6 gfortran-6" ./install_packages.sh
        - env CC=gcc-6 CXX=g++-6 FC=gfortran-6 GCOV=gcov-6 BUILD_SHARED_LIBS=yes BML_OPENMP=yes BML_INTERNAL_BLAS=yes ./build.sh testing
    - stage: coverage
      script:
        - pip install cpp-coveralls codecov
        - env packages="${DEVEL_PACKAGES} gcc-8 g++-8 gfortran-8" ./install_packages.sh
        - env CC=gcc-8 CXX=g++-8 FC=gfortran-8 GCOV=gcov-8 BUILD_SHARED_LIBS=yes BML_OPENMP=yes BML_INTERNAL_BLAS=yes ./build.sh testing
      after_success:
        - codecov --gcov-exec ${GCOV}
        - coveralls
    - stage: coverity
      before_install:
        - echo -n | openssl s_client -connect https://scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-
      script:
        - env packages="${DEVEL_PACKAGES} gcc-8 g++-8 gfortran-8" ./install_packages.sh
        - env CC=gcc-8 CXX=g++-8 FC=gfortran-8 GCOV=gcov-8 BUILD_SHARED_LIBS=yes BML_OPENMP=yes BML_INTERNAL_BLAS=yes ./build.sh compile
