---

name: CI
on:
  release:
    type: [created]
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

# Defaults
env:
  CC: gcc
  CXX: g++
  FC: gfortran
  BUILD_SHARED_LIBS: no
  BML_OPENMP: no
  BML_MPI: no
  BML_INTERNAL_BLAS: no
  BML_VALGRIND: no

jobs:
  containers:
    name: Update container images (only approve if change involves the Dockerfile and if the change is trusted)
    runs-on: ubuntu-latest
    environment: CI
    steps:
      - name: Check out sources
        uses: actions/checkout@v2
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: nicolasbock/bml
          tag-sha: true
      - name: Set up qemu
        uses: docker/setup-qemu-action@v1
      - name: Set up buildx
        uses: docker/setup-buildx-action@v1
      - name: Log in to Docker hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build image and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}

  lint:
    name: Lint sources
    runs-on: ubuntu-latest
    container:
      image: nicolasbock/bml:master
    steps:
      - name: Check out sources
        uses: actions/checkout@v1
      - run: bundle install
      - run: bundle exec danger || true
      - run: BML_OPENMP=no VERBOSE_MAKEFILE=yes EMACS=emacs26 ./build.sh check_indent

  docs:
    name: Build docs
    runs-on: ubuntu-latest
    needs: lint
    container:
      image: nicolasbock/bml:master
    steps:
      - name: Check out sources
        uses: actions/checkout@v2
      - name: Build docs
        run: ./build.sh docs

  build:
    name: Build and test the library
    runs-on: ubuntu-latest
    needs: lint
    container:
      image: nicolasbock/bml:master
    strategy:
      matrix:
        include:
          - {CC: gcc-4.8, CXX: g++-4.8, FC: gfortran-4.8, BUILD_SHARED_LIBS: yes, BML_OPENMP: no,  BML_INTERNAL_BLAS: no}
          - {CC: gcc-4.8, CXX: g++-4.8, FC: gfortran-4.8, BUILD_SHARED_LIBS: yes, BML_OPENMP: no,  BML_INTERNAL_BLAS: yes}
          - {CC: gcc-4.8, CXX: g++-4.8, FC: gfortran-4.8, BUILD_SHARED_LIBS: yes, BML_OPENMP: yes, BML_INTERNAL_BLAS: no}
          - {CC: gcc-4.8, CXX: g++-4.8, FC: gfortran-4.8, BUILD_SHARED_LIBS: yes, BML_OPENMP: yes, BML_INTERNAL_BLAS: yes}
          - {CC: gcc-9,   CXX: g++-9,   FC: gfortran-9,   BUILD_SHARED_LIBS: no,  BML_OPENMP: no,  BML_INTERNAL_BLAS: no, TESTING_EXTRA_ARGS: "-R C-.*-single_real",          BML_VALGRIND: yes}
          - {CC: gcc-9,   CXX: g++-9,   FC: gfortran-9,   BUILD_SHARED_LIBS: no,  BML_OPENMP: no,  BML_INTERNAL_BLAS: no, TESTING_EXTRA_ARGS: "-R C-.*-double_real",          BML_VALGRIND: yes}
          - {CC: gcc-9,   CXX: g++-9,   FC: gfortran-9,   BUILD_SHARED_LIBS: no,  BML_OPENMP: no,  BML_INTERNAL_BLAS: no, TESTING_EXTRA_ARGS: "-R C-.*-single_complex",       BML_VALGRIND: yes}
          - {CC: gcc-9,   CXX: g++-9,   FC: gfortran-9,   BUILD_SHARED_LIBS: no,  BML_OPENMP: no,  BML_INTERNAL_BLAS: no, TESTING_EXTRA_ARGS: "-R C-.*-double_complex",       BML_VALGRIND: yes}
          - {CC: gcc-9,   CXX: g++-9,   FC: gfortran-9,   BUILD_SHARED_LIBS: no,  BML_OPENMP: no,  BML_INTERNAL_BLAS: no, TESTING_EXTRA_ARGS: "-R fortran-.*-single_real",    BML_VALGRIND: yes}
          - {CC: gcc-9,   CXX: g++-9,   FC: gfortran-9,   BUILD_SHARED_LIBS: no,  BML_OPENMP: no,  BML_INTERNAL_BLAS: no, TESTING_EXTRA_ARGS: "-R fortran-.*-double_real",    BML_VALGRIND: yes}
          - {CC: gcc-9,   CXX: g++-9,   FC: gfortran-9,   BUILD_SHARED_LIBS: no,  BML_OPENMP: no,  BML_INTERNAL_BLAS: no, TESTING_EXTRA_ARGS: "-R fortran-.*-single_complex", BML_VALGRIND: yes}
          - {CC: gcc-9,   CXX: g++-9,   FC: gfortran-9,   BUILD_SHARED_LIBS: no,  BML_OPENMP: no,  BML_INTERNAL_BLAS: no, TESTING_EXTRA_ARGS: "-R fortran-.*-double_complex", BML_VALGRIND: yes}
          - {CC: mpicc,   CXX: mpic++,  FC: mpifort,      BUILD_SHARED_LIBS: no,  BML_OPENMP: no,  BML_INTERNAL_BLAS: no, BML_MPI: yes, BML_MPIEXEC_NUMPROCS_FLAG: "-np", TESTING_EXTRA_ARGS: "-R MPI-C-.*-single_real", BML_VALGRIND: yes}
    steps:
      - name: Check out sources
        uses: actions/checkout@v2
      - name: Build and test library
        env:
          CC: ${{ matrix.CC }}
          CXX: ${{ matrix.CXX }}
          FC: ${{ matrix.FC }}
          BUILD_SHARED_LIBS: ${{ matrix.BUILD_SHARED_LIBS }}
          BML_OPENMP: ${{ matrix.BML_OPENMP }}
          BML_MPI: ${{ matrix.BML_MPI }}
          BML_MPIEXEC_NUMPROCS_FLAG: ${{matrix.BML_MPIEXEC_NUMPROCS_FLAG}}
          BML_INTERNAL_BLAS: ${{ matrix.BML_INTERNAL_BLAS }}
          TESTING_EXTRA_ARGS: ${{ matrix.TESTING_EXTRA_ARGS }}
          BML_VALGRIND: ${{ matrix.BML_VALGRIND }}
        run: ./build.sh testing
